%YAML:1.0

# Project
project_name: "emv_lio"

#common parameters
imu_topic: "/ouster/imu"
image_topic: "/rgb_cam/image_raw"
point_cloud_topic: "/ouster/points"

# Lidar Params
use_lidar: 1                    # whether use depth info from lidar or not
lidar_skip: 3                    # skip this amount of scans
align_camera_lidar_estimation: 0 # align camera and lidar estimation for visualization

# cam's number
# num_of_cam: 1

# camera to lidar extrinsic
cam_to_lidar_tx: 0
cam_to_lidar_ty: 0
cam_to_lidar_tz: 0
cam_to_lidar_rx: 0
cam_to_lidar_ry: 0
cam_to_lidar_rz: 0
# camera model
model_type: PINHOLE
camera_name: camera

# Mono camera config
image_width: 640
image_height: 480
mirror_parameters:
   xi: 1.9926618269451453
distortion_parameters:
   k1: 0.189371246634119
   k2: -0.246689861192475
   p1: 0.0932029592560212
   p2: 0.00114430273374253
projection_parameters:
   fx: 430.237387731618
   fy: 429.828906586665
   cx: 329.023573843919
   cy: 244.128708878473
fisheye_mask: "/config/fisheye_mask_720x540.jpg"

#imu parameters       The more accurate parameters you provide, the worse performance
imu_freq: 200
acc_n: 0.0022281160035059417         # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.00011667951042710442          # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.00011782392708033614         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.616129872371749e-06        # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.78       # gravity magnitude

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data:  [ 0,0,1,
            -1,0,0,
            0,-1,0   ]

#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0,0,0]

#feature tracker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
freq: 0                 # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.035   # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0  # keyframe selection threshold (pixel)

#unsynchronization parameters
estimate_td: 0           # online estimate time offset between camera and imu
td: 0                    # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 1       # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0    # unit: s. rolling shutter read out time per frame (from data sheet). 

#loop closure parameters
loop_closure: 0                    # start loop closure
skip_time: 0.0
skip_dist: 0.0
debug_image: 0                      # save raw image in loop detector for visualization prupose; you can close this function by setting 0 
match_image_scale: 0.5
vocabulary_file: "/config/brief_k10L6.bin"
brief_pattern_file: "/config/brief_pattern.yml"
